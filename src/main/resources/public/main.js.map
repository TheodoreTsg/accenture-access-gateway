{"version":3,"sources":["./src/app/services/error.service.ts","./src/app/interceptor/auth.interceptor.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/access.service.ts","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/resources/resources.component.ts","./src/app/components/resources/resources.component.html","./src/app/app.module.ts","./src/app/services/get-resources.service.ts","./src/app/interceptor/cross-origin.interceptor.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private _snackBar: MatSnackBar,\r\n  ) {\r\n  }\r\n\r\n  displayDynamicErrorMessage(reason: any) {\r\n    this._snackBar.open(reason.error.message, 'Close', {duration: 5000});\r\n  }\r\n\r\n  displayDynamicTextErrorMessage(reason: any) {\r\n    this._snackBar.open(JSON.parse(reason.error).message, 'Close', {duration: 5000});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {CookieService} from 'ngx-cookie-service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private cookieService: CookieService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if(!request.url.includes('resources')) {\n      console.log('Not resource CSRF:', this.cookieService.get('CSRF'));\n    }\n    return next.handle(request).pipe(\n      tap((httpEvent: HttpEvent<any>) => {\n        if (httpEvent instanceof HttpResponse) {\n          if(httpEvent.headers.has('Set-Cookie')) {\n            console.log(httpEvent.headers.get('Set-Cookie'));\n          }\n        }\n      })\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  serverURL: 'http://',\r\n  authURL: 'localhost:8080',\r\n  api: {\r\n    resources: '/api/resources',\r\n    access: '/api/access'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  resource = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  showResource(resource: any): void {\r\n    this.resource = resource;\r\n  }\r\n\r\n}\r\n","<div class=\"main-div\">\r\n  <div class=\"container pt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm me-1 border border-secondary border-1 rounded-3\">\r\n        <app-resources (resourceLoading)=\"showResource($event)\"></app-resources>\r\n      </div>\r\n      <div class=\"col-sm border border-secondary border-1 rounded-3\">\r\n        <div class=\"text-center\">\r\n          <h1>Show Resource</h1>\r\n          <div [innerHTML]=\"resource\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Observable, Subject, throwError} from \"rxjs\";\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {Authenticated} from '../shared/models/models';\r\nimport {ErrorService} from './error.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccessService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private errorService: ErrorService\r\n  ) {\r\n  }\r\n\r\n  access(loginParam: string): Observable<Authenticated> {\r\n    return this.httpClient.get<Authenticated>(\r\n      environment.serverURL + environment.authURL + environment.api.access,\r\n      { headers: new HttpHeaders({'Authorization': 'Basic ' + loginParam})}\r\n    )\r\n      .pipe(\r\n        catchError( reason => {\r\n          this.errorService.displayDynamicErrorMessage(reason);\r\n          return throwError(reason);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>Page Not Found</h2>\r\n<p>We couldn't find that page! Not even with x-ray vision.</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ResourcesService} from \"./services/get-resources.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  title = 'gatekeeper-ui';\r\n\r\n  constructor(\r\n    private resourcesService: ResourcesService\r\n  ){\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.resourcesService.initialize();\r\n  }\r\n}\r\n","<div class=\"app-navbar\">\r\n  <mat-toolbar color=\"primary\">\r\n    <button mat-button routerLink=\"home\">Home</button>\r\n  </mat-toolbar>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import {Component, Output, EventEmitter, OnInit, Input} from '@angular/core';\r\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport {AccessService} from '../../services/access.service';\r\nimport {Authenticated} from '../../shared/models/models';\r\nimport {MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition} from '@angular/material/snack-bar';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {error} from 'protractor';\r\nimport {throwError} from 'rxjs';\r\nimport {ActivatedRoute, Route, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  @Output() submitForm = new EventEmitter();\r\n\r\n  loginForm: FormGroup = new FormGroup({\r\n    username: new FormControl('', Validators.required),\r\n    password: new FormControl('', Validators.required),\r\n  });\r\n\r\n  usernameError = 'You must enter a Username!';\r\n  passwordError = 'You must enter a Password!';\r\n  hide = true;\r\n  level = '';\r\n\r\n  constructor(\r\n    private accessService: AccessService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.level = this.route.snapshot.queryParams['Level'];\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.valid) {\r\n      let loginParam = this.level + '#' + this.loginForm.value.username + ':' + this.loginForm.value.password;\r\n      this.accessService.access(btoa(loginParam)).subscribe(\r\n        (data: Authenticated) => {\r\n          if(data) {\r\n            this.router.navigateByUrl('home');\r\n            this.openSnackBar('Authentication Successful!', 'Close');\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this._snackBar.open(message, action, {duration: 5000});\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-title>Login</mat-card-title>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <p>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput formControlName=\"username\" required>\r\n          <mat-error *ngIf=\"loginForm.controls['username'].invalid\">{{usernameError}}</mat-error>\r\n        </mat-form-field>\r\n      </p>\r\n      <p>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Password</mat-label>\r\n          <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n          <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n          </button>\r\n          <mat-error *ngIf=\"loginForm.controls['password'].invalid\">{{passwordError}}</mat-error>\r\n        </mat-form-field>\r\n      </p>\r\n      <div class=\"button\">\r\n        <button type=\"submit\" mat-button color=\"primary\">Login</button>\r\n      </div>\r\n\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {ResourcesService} from \"../../services/get-resources.service\";\r\nimport {ResourceFile} from \"./resourceFile\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {HttpParams} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-resources',\r\n  templateUrl: './resources.component.html',\r\n  styleUrls: ['./resources.component.css']\r\n})\r\nexport class ResourcesComponent implements OnInit {\r\n  @Output() resourceLoading: EventEmitter<any> = new EventEmitter<string>();\r\n\r\n  private subs: Subscription[] = [];\r\n  resources = [];\r\n  lowAccess: ResourceFile[] = [];\r\n  highAccess: ResourceFile[] = [];\r\n  noAccess: ResourceFile[] = [];\r\n\r\n  constructor(\r\n    private resourcesService: ResourcesService,\r\n    private cookieService: CookieService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subs.push(this.resourcesService.resources$.subscribe(\r\n      resources => {this.resources = resources;\r\n        this.resources.forEach((element, index) => {\r\n          if (index < 2) {\r\n            this.lowAccess.push({id: element, value: 'Level 1 Security Resource'});\r\n          } else if (index < 4) {\r\n            this.highAccess.push({id: element, value: 'Level 2 Security Resource'});\r\n          } else {\r\n            this.noAccess.push({id: element, value: 'No Security Resource'});\r\n          }\r\n        });\r\n      }\r\n    ));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.forEach((s: Subscription) => s.unsubscribe());\r\n  }\r\n\r\n  resourceSelected(param: string, level: string) {\r\n    let httpParams = new HttpParams()\r\n      .set('XSRF', this.cookieService.get('CSRF'));\r\n    this.resourcesService.getResource(param, httpParams)\r\n      .subscribe(value => {\r\n        console.log(value);\r\n        this.resourceLoading.emit(value);\r\n      },error => {\r\n        this.router.navigate(['/login'], {\r\n          queryParams: {\r\n            'Level': level\r\n          },\r\n          queryParamsHandling: 'merge'\r\n        })\r\n      });\r\n  }\r\n\r\n}\r\n","<mat-card *ngIf=\"resources.length != 0\">\r\n  <mat-card-title>Resources</mat-card-title>\r\n  <mat-card-content>\r\n    <mat-accordion class=\"example-headers-align\">\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Low Access Resources\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            Click on any low resource!\r\n            <mat-icon color=\"primary\">security</mat-icon>\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-selection-list [multiple]=\"false\">\r\n          <mat-list-option *ngFor=\"let low of lowAccess\" [value]=\"low.id\" (click)=\"resourceSelected(low.id, '1')\">\r\n            <mat-divider></mat-divider>\r\n            {{low.value}}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n\r\n      </mat-expansion-panel>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            High Access Resources\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            Click on any high resource!\r\n            <mat-icon color=\"warn\">security</mat-icon>\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-selection-list [multiple]=\"false\">\r\n          <mat-list-option *ngFor=\"let high of highAccess\" [value]=\"high.id\" (click)=\"resourceSelected(high.id, '2')\">\r\n            <mat-divider></mat-divider>\r\n            {{high.value}}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </mat-expansion-panel>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            No Access Resources\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            Click on any resource!\r\n            <mat-icon color=\"accent\">lock_open</mat-icon>\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-selection-list [multiple]=\"false\">\r\n          <mat-list-option *ngFor=\"let no_access of noAccess\" [value]=\"no_access.id\" (click)=\"resourceSelected(no_access.id, '0')\">\r\n            <mat-divider></mat-divider>\r\n            {{no_access.value}}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { ResourcesComponent } from './components/resources/resources.component';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {CrossOriginInterceptor} from './interceptor/cross-origin.interceptor';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\nimport {AuthInterceptor} from './interceptor/auth.interceptor';\r\nimport {CookieService} from 'ngx-cookie-service';\r\n\r\nexport const interceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: CrossOriginInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    ResourcesComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatTreeModule,\r\n    MatExpansionModule,\r\n    HttpClientModule,\r\n    MatSnackBarModule\r\n  ],\r\n  providers: [interceptorProviders, CookieService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Observable, ReplaySubject, throwError} from 'rxjs';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {environment} from \"../../environments/environment\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {ErrorService} from \"./error.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n  export class ResourcesService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private errorService: ErrorService\r\n  ) {\r\n  }\r\n\r\n  private resources = new ReplaySubject<any>(1);\r\n  resources$: Observable<any> = this.resources.asObservable();\r\n\r\n  initialize(): void {\r\n    this.getResources().subscribe(\r\n      resources => this.resources.next(resources.resources)\r\n    );\r\n  }\r\n\r\n  private getResources(): Observable<any> {\r\n    return this.httpClient.get(\r\n      environment.serverURL + environment.authURL + environment.api.resources\r\n    )\r\n      .pipe(\r\n        tap(),\r\n        catchError( reason => {\r\n          return throwError(reason);\r\n        })\r\n      );\r\n  }\r\n\r\n  getResource(resource: string, httpParams: HttpParams): Observable<any> {\r\n    return this.httpClient.get(\r\n      environment.serverURL + environment.authURL + resource,\r\n      {\r\n        params: httpParams,\r\n        responseType: 'text'\r\n      },\r\n    )\r\n      .pipe(\r\n        tap(),\r\n        catchError( reason => {\r\n          this.errorService.displayDynamicTextErrorMessage(reason);\r\n          return throwError(reason);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class CrossOriginInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    // const modifiedReq = request.clone({\n    //   headers: request.headers.set('Access-Control-Allow-Origin', '*')\n    //     .set('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE')\n    //     .set('Access-Control-Allow-Headers', 'X-Requested-With,content-type')\n    // });\n    return next.handle(request);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport {PageNotFoundComponent} from './components/page-not-found/page-not-found.component';\r\nimport {LoginComponent} from \"./components/login/login.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: '**', component: PageNotFoundComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}